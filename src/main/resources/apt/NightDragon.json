[
{"apt_name": "Night Dragon", "apt_description": "Night Dragon is a campaign name for activity involving a threat group that has conducted activity originating primarily in China. [1]", "software_item": [{"software_name": "ASPXSpy", "software_description": "Server Software Component: Web Shell"}, {"software_name": "at", "software_description": "Scheduled Task/Job: At (Windows)"}, {"software_name": "gsecdump", "software_description": "OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets"}, {"software_name": "PsExec", "software_description": "Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution"}, {"software_name": "zwShell", "software_description": "Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, File and Directory Discovery, Indicator Removal on Host: File Deletion, Modify Registry, Remote Services: Remote Desktop Protocol, Remote Services: SMB/Windows Admin Shares, Scheduled Task/Job: Scheduled Task, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery"}]},
{"attack_pattern_name": "Phishing: Spearphishing Link", "attack_pattern_description": "Night Dragon sent spearphishing emails containing links to compromised websites where malware was downloaded.[1]", "attack_pattern_platforms": "Linux, Office 365, SaaS, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-163", "attack_pattern_DataSources": "DNS records, Detonation chamber, Email gateway, Mail server, Packet capture, SSL/TLS inspection, Web proxy", "attack_pattern_detection": "URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.Because this technique usually involves user interaction on the endpoint, many of the possible detections take place once User Execution occurs.", "attack_pattern_mitigations": [{"mitigations_name": "Restrict Web-Based Content", "mitigations_description": "Determine if certain websites that can be used for spearphishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk."}, {"mitigations_name": "User Training", "mitigations_description": "Users can be trained to identify social engineering techniques and spearphishing emails with malicious links."}]},
{"attack_pattern_name": "Impair Defenses: Disable or Modify Tools", "attack_pattern_description": "Night Dragon has disabled anti-virus and anti-spyware tools in some instances on the victim\u2019s machines. The actors have also disabled proxy settings to allow direct communication from victims to the Internet.[[1]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-578", "attack_pattern_DataSources": "File monitoring, Process command-line parameters, Services, Windows Registry", "attack_pattern_detection": "Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log events may be suspicious.", "attack_pattern_mitigations": [{"mitigations_name": "Restrict File and Directory Permissions", "mitigations_description": "Ensure proper process and file permissions are in place to prevent adversaries from disabling or interfering with security services."}, {"mitigations_name": "Restrict Registry Permissions", "mitigations_description": "Ensure proper Registry permissions are in place to prevent adversaries from disabling or interfering with security services."}, {"mitigations_name": "User Account Management", "mitigations_description": "Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security services."}]},
{"attack_pattern_name": "OS Credential Dumping: Security Account Manager", "attack_pattern_description": "Night Dragon has dumped account hashes with Carbanak and cracked them with Cain & Abel.[1]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "PowerShell logs, Process command-line parameters, Process monitoring", "attack_pattern_detection": "Hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well.", "attack_pattern_mitigations": [{"mitigations_name": "Operating System Configuration", "mitigations_description": "Consider disabling or restricting NTLM.[2]"}, {"mitigations_name": "Password Policies", "mitigations_description": "Ensure that local administrator accounts have complex, unique passwords across all systems on the network."}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers."}, {"mitigations_name": "User Training", "mitigations_description": "Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts."}]},
{"attack_pattern_name": "Obfuscated Files or Information", "attack_pattern_description": "A Night Dragon DLL included an XOR-encoded section.[1]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-267", "attack_pattern_DataSources": "Binary file metadata, Email gateway, Environment variable, File monitoring, Malware reverse engineering, Network intrusion detection system, Network protocol analysis, Process command-line parameters, Process monitoring, Process use of network, SSL/TLS inspection, Windows event logs", "attack_pattern_detection": "Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). Flag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. [229] [5] [230] Obfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.", "attack_pattern_mitigations": [{"mitigations_name": "Antivirus/Antimalware", "mitigations_description": "Consider utilizing the Antimalware Scan Interface (AMSI) on Windows 10 to analyze commands after being processed/interpreted. [7]"}]},
{"attack_pattern_name": "Exploit Public-Facing Application", "attack_pattern_description": "Night Dragon has performed SQL injection attacks of extranet web servers to gain access.[1]", "attack_pattern_platforms": "AWS, Azure, GCP, Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "AWS CloudTrail logs, Application logs, Azure activity logs, Packet capture, Stackdriver logs, Web application firewall logs, Web logs", "attack_pattern_detection": "Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.", "attack_pattern_mitigations": [{"mitigations_name": "Application Isolation and Sandboxing", "mitigations_description": "Application isolation will limit what other processes and system features the exploited target can access."}, {"mitigations_name": "Exploit Protection", "mitigations_description": "Web Application Firewalls may be used to limit exposure of applications to prevent exploit traffic from reaching the application."}, {"mitigations_name": "Network Segmentation", "mitigations_description": "Segment externally facing servers and services from the rest of the network with a DMZ or on separate hosting infrastructure."}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Use least privilege for service accounts will limit what permissions the exploited process gets on the rest of the system."}, {"mitigations_name": "Update Software", "mitigations_description": "Regularly scan externally facing systems for vulnerabilities and establish procedures to rapidly patch systems when critical vulnerabilities are discovered through scanning and through public disclosure."}, {"mitigations_name": "Vulnerability Scanning", "mitigations_description": "Regularly scan externally facing systems for vulnerabilities and establish procedures to rapidly patch systems when critical vulnerabilities are discovered through scanning and through public disclosure.[4]"}]},
{"attack_pattern_name": "Use Alternate Authentication Material: Pass the Hash", "attack_pattern_description": "Night Dragon used pass-the-hash tools to gain usernames and passwords.[1]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": "CAPEC-644", "attack_pattern_DataSources": "Authentication logs", "attack_pattern_detection": "Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.", "attack_pattern_mitigations": [{"mitigations_name": "Privileged Account Management", "mitigations_description": "Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform Lateral Movement between systems."}, {"mitigations_name": "Update Software", "mitigations_description": "Apply patch KB2871997 to Windows 7 and higher systems to limit the default access of accounts in the local administrator group."}, {"mitigations_name": "User Account Control", "mitigations_description": "Enable pass the hash mitigations to apply UAC restrictions to local accounts on network logon. The associated Registry key is located HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicy.Through GPO: Computer Configuration > [Policies] > Administrative Templates > SCM: Pass the Hash Mitigations: Apply UAC restrictions to local accounts on network logons.[2]"}, {"mitigations_name": "User Account Management", "mitigations_description": "Do not allow a domain user to be in the local administrator group on multiple systems."}]},
{"attack_pattern_name": "External Remote Services", "attack_pattern_description": "Night Dragon has used compromised VPN accounts to gain access to victim systems.[1]", "attack_pattern_platforms": "Linux, Windows", "attack_pattern_CAPEC_ID": "CAPEC-555", "attack_pattern_DataSources": "Authentication logs", "attack_pattern_detection": "Follow best practices for detecting adversary use of Valid Accounts for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.", "attack_pattern_mitigations": [{"mitigations_name": "Disable or Remove Feature or Program", "mitigations_description": "Disable or block remotely available services that may be unnecessary."}, {"mitigations_name": "Limit Access to Resource Over Network", "mitigations_description": "Limit access to remote services through centrally managed concentrators such as VPNs and other managed remote access systems."}, {"mitigations_name": "Multi-factor Authentication", "mitigations_description": "Use strong two-factor or multi-factor authentication for remote service accounts to mitigate an adversary's ability to leverage stolen credentials, but be aware of Two-Factor Authentication Interception techniques for some two-factor authentication implementations."}, {"mitigations_name": "Network Segmentation", "mitigations_description": "Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls."}]},
{"attack_pattern_name": "Acquire and/or use 3rd party infrastructure services", "attack_pattern_description": "Night Dragon used servers in China, the U.S., and the Netherlands in an attempt to hide their operations.[1]", "attack_pattern_platforms": null, "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": null, "attack_pattern_detection": "Easy for the Adversary (Yes/No):&nbspYes Explanation:&nbspWide range of 3rd party services for hosting, rotating, or moving C2, static data, exploits, exfiltration, etc.", "attack_pattern_mitigations": [{"mitigations_name": "Night Dragon", "mitigations_description": "Night Dragon used servers in China, the U.S., and the Netherlands in an attempt to hide their operations.[2]"}]},
{"attack_pattern_name": "Remote access tool development", "attack_pattern_description": "Night Dragon used privately developed and customized remote access tools.[1]", "attack_pattern_platforms": null, "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": null, "attack_pattern_detection": "Easy for the Adversary (Yes/No):&nbspYes Explanation:&nbspMany successful RATs exist for re-use/tailoring in addition to those an adversary may choose to build from scratch. The adversary's capabilities, target sensitivity, and needs will likely determine whether a previous RAT is modified for use a new one is built from scratch.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Acquire and/or use 3rd party software services", "attack_pattern_description": "Night Dragon used third party hosting services in the U.S. in an attempt to hide their operations.[1]", "attack_pattern_platforms": null, "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": null, "attack_pattern_detection": "Easy for the Adversary (Yes/No):&nbspYes Explanation:&nbsp3rd party services like these listed are freely available.", "attack_pattern_mitigations": [{"mitigations_name": "APT1", "mitigations_description": "APT1 used third party email services in the registration of whois records.[3]"}, {"mitigations_name": "Night Dragon", "mitigations_description": "Night Dragon used third party hosting services in the U.S. in an attempt to hide their operations.[2]"}]},
{"attack_pattern_name": "Application Layer Protocol: Web Protocols", "attack_pattern_description": "Night Dragon has used HTTP for C2.[1]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Netflow/Enclave netflow, Network protocol analysis, Packet capture, Process monitoring, Process use of network", "attack_pattern_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.[195]Monitor for web traffic to/from known-bad or suspicious domains.", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level."}]},
{"attack_pattern_name": "Software Packing", "attack_pattern_description": "Night Dragon is known to use software packing in its tools.[1]", "attack_pattern_platforms": "Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-570", "attack_pattern_DataSources": "Binary file metadata", "attack_pattern_detection": "Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.", "attack_pattern_mitigations": [{"mitigations_name": "Antivirus/Antimalware", "mitigations_description": "Employ heuristic-based malware detection. Ensure updated virus definitions and create custom signatures for observed malware."}]},
{"attack_pattern_name": "User Execution: Malicious Link", "attack_pattern_description": "Night Dragon enticed users to click on links in spearphishing emails to download malware.[1]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Anti-virus, Process monitoring, Web proxy", "attack_pattern_detection": "Inspect network traffic for indications that a user visited a malicious site, such as links included in phishing campaigns directed at your organization.Anti-virus can potentially detect malicious documents and files that are downloaded from a link and executed on the user's computer.", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "If a link is being visited by a user, network intrusion prevention systems and systems designed to scan and remove malicious downloads can be used to block activity."}, {"mitigations_name": "Restrict Web-Based Content", "mitigations_description": "If a link is being visited by a user, block unknown or unused files in transit by default that should not be downloaded or by policy from suspicious sites as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some download scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious files."}, {"mitigations_name": "User Training", "mitigations_description": "Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events."}]},
{"attack_pattern_name": "Data Staged: Remote Data Staging", "attack_pattern_description": "Night Dragon has copied files to company web servers and subsequently downloaded them.[1]", "attack_pattern_platforms": "AWS, Azure, GCP, Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "File monitoring, Process command-line parameters, Process monitoring", "attack_pattern_detection": "Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.Monitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Valid Accounts", "attack_pattern_description": "Night Dragon has used compromised VPN accounts to gain access to victim systems.[1]", "attack_pattern_platforms": "AWS, Azure, Azure AD, GCP, Linux, Office 365, SaaS, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-560", "attack_pattern_DataSources": "AWS CloudTrail logs, Authentication logs, Process monitoring, Stackdriver logs", "attack_pattern_detection": "Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services. [40] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).Perform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence. Checks on these accounts could also include whether default accounts such as Guest have been activated. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.", "attack_pattern_mitigations": [{"mitigations_name": "Application Developer Guidance", "mitigations_description": "Ensure that applications do not store sensitive data or credentials insecurely. (e.g. plaintext credentials in code, published credentials in repositories, or credentials in public cloud storage)."}, {"mitigations_name": "Password Policies", "mitigations_description": "Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. [4] When possible, applications that use SSH keys should be updated periodically and properly secured."}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. [1] [2] These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. [3]"}]},
{"attack_pattern_name": "Remote Access Software", "attack_pattern_description": "Night Dragon has used several remote administration tools as persistent infiltration channels.[1]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Network intrusion detection system, Network protocol analysis, Process monitoring, Process use of network", "attack_pattern_detection": "Monitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators.Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.Domain Fronting may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions.", "attack_pattern_mitigations": [{"mitigations_name": "Execution Prevention", "mitigations_description": "Use application control to mitigate installation and use of unapproved software that can be used for remote access."}, {"mitigations_name": "Filter Network Traffic", "mitigations_description": "Properly configure firewalls, application firewalls, and proxies to limit outgoing traffic to sites and services used by remote access tools."}, {"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures may be able to prevent traffic to remote access services."}]}
]