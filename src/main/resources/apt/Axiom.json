[
{"apt_name": "Axiom", "apt_description": "Axiom is a cyber espionage group suspected to be associated with the Chinese government. It is responsible for the Operation SMN campaign. [1] Though both this group and Winnti Group use the malware Winnti for Windows, the two groups appear to be distinct based on differences in reporting on the groups' TTPs and targeting. [2] [3] [4]", "software_item": [{"software_name": "Derusbi", "software_description": "Audio Capture, Command and Scripting Interpreter: Unix Shell, Commonly Used Port, Encrypted Channel: Symmetric Cryptography, Fallback Channels, File and Directory Discovery, Indicator Removal on Host: Timestomp, Indicator Removal on Host: File Deletion, Input Capture: Keylogging, Non-Application Layer Protocol, Non-Standard Port, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Screen Capture, Signed Binary Proxy Execution: Regsvr32, System Information Discovery, System Owner/User Discovery, Video Capture"}, {"software_name": "Hikit", "software_description": "Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Symmetric Cryptography, Hijack Execution Flow: DLL Search Order Hijacking, Proxy: Internal Proxy, Rootkit, Subvert Trust Controls: Install Root Certificate"}, {"software_name": "Hydraq", "software_description": "Access Token Manipulation, Create or Modify System Process: Windows Service, Data from Local System, Encrypted Channel: Symmetric Cryptography, Exfiltration Over Alternative Protocol, File and Directory Discovery, Indicator Removal on Host: File Deletion, Indicator Removal on Host: Clear Windows Event Logs, Ingress Tool Transfer, Modify Registry, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, Shared Modules, System Information Discovery, System Network Configuration Discovery, System Service Discovery, System Services: Service Execution"}, {"software_name": "ZxShell", "software_description": "Access Token Manipulation: Create Process with Token, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, Command and Scripting Interpreter: Windows Command Shell, Commonly Used Port, Create Account: Local Account, Create or Modify System Process: Windows Service, Endpoint Denial of Service, File and Directory Discovery, Impair Defenses: Disable or Modify Tools, Impair Defenses: Disable or Modify System Firewall, Indicator Removal on Host: File Deletion, Indicator Removal on Host: Clear Windows Event Logs, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Network Service Scanning, Process Discovery, Process Injection: Dynamic-link Library Injection, Proxy, Query Registry, Remote Services: Remote Desktop Protocol, Remote Services: VNC, Screen Capture, Signed Binary Proxy Execution: Rundll32, System Information Discovery, System Owner/User Discovery, System Service Discovery, Video Capture"}]},
{"attack_pattern_name": "Event Triggered Execution: Accessibility Features", "attack_pattern_description": "Axiom actors have been known to use the Sticky Keys replacement within RDP sessions to obtain persistence.[1]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": "CAPEC-558", "attack_pattern_DataSources": "File monitoring, Process command-line parameters, Process monitoring, Windows Registry", "attack_pattern_detection": "Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options.", "attack_pattern_mitigations": [{"mitigations_name": "Execution Prevention", "mitigations_description": "Adversaries can replace accessibility features binaries with alternate binaries to execute this technique. Identify and block potentially malicious software executed through accessibility features functionality by using application control [7] tools, like Windows Defender Application Control[8], AppLocker, [9] [10] or Software Restriction Policies [11] where appropriate. [12]"}, {"mitigations_name": "Limit Access to Resource Over Network", "mitigations_description": "If possible, use a Remote Desktop Gateway to manage connections and security configuration of RDP within a network.[6]"}, {"mitigations_name": "Operating System Configuration", "mitigations_description": "To use this technique remotely, an adversary must use it in conjunction with RDP. Ensure that Network Level Authentication is enabled to force the remote desktop session to authenticate before the session is created and the login screen displayed. It is enabled by default on Windows Vista and later.[5]"}]},
{"attack_pattern_name": "Remote Services: Remote Desktop Protocol", "attack_pattern_description": "The Axiom group is known to have used RDP during operations.[1]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": "CAPEC-555", "attack_pattern_DataSources": "Authentication logs, Netflow/Enclave netflow, Process monitoring", "attack_pattern_detection": "Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.", "attack_pattern_mitigations": [{"mitigations_name": "Audit", "mitigations_description": "Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups."}, {"mitigations_name": "Disable or Remove Feature or Program", "mitigations_description": "Disable the RDP service if it is unnecessary."}, {"mitigations_name": "Limit Access to Resource Over Network", "mitigations_description": "Use remote desktop gateways."}, {"mitigations_name": "Multi-factor Authentication", "mitigations_description": "Use multi-factor authentication for remote logins.[4]"}, {"mitigations_name": "Network Segmentation", "mitigations_description": "Do not leave RDP accessible from the internet. Enable firewall rules to block RDP traffic between network security zones within a network."}, {"mitigations_name": "Operating System Configuration", "mitigations_description": "Change GPOs to define shorter timeouts sessions and maximum amount of time any single session can be active. Change GPOs to specify the maximum amount of time that a disconnected session stays active on the RD session host server.[3]"}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Consider removing the local Administrators group from the list of groups allowed to log in through RDP."}, {"mitigations_name": "User Account Management", "mitigations_description": "Limit remote user permissions if remote access is necessary."}]},
{"attack_pattern_name": "Exploit Public-Facing Application", "attack_pattern_description": "Axiom has been observed using SQL injection to gain access to systems.[1][5]", "attack_pattern_platforms": "AWS, Azure, GCP, Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "AWS CloudTrail logs, Application logs, Azure activity logs, Packet capture, Stackdriver logs, Web application firewall logs, Web logs", "attack_pattern_detection": "Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.", "attack_pattern_mitigations": [{"mitigations_name": "Application Isolation and Sandboxing", "mitigations_description": "Application isolation will limit what other processes and system features the exploited target can access."}, {"mitigations_name": "Exploit Protection", "mitigations_description": "Web Application Firewalls may be used to limit exposure of applications to prevent exploit traffic from reaching the application."}, {"mitigations_name": "Network Segmentation", "mitigations_description": "Segment externally facing servers and services from the rest of the network with a DMZ or on separate hosting infrastructure."}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Use least privilege for service accounts will limit what permissions the exploited process gets on the rest of the system."}, {"mitigations_name": "Update Software", "mitigations_description": "Regularly scan externally facing systems for vulnerabilities and establish procedures to rapidly patch systems when critical vulnerabilities are discovered through scanning and through public disclosure."}, {"mitigations_name": "Vulnerability Scanning", "mitigations_description": "Regularly scan externally facing systems for vulnerabilities and establish procedures to rapidly patch systems when critical vulnerabilities are discovered through scanning and through public disclosure.[4]"}]},
{"attack_pattern_name": "Data Obfuscation", "attack_pattern_description": "The Axiom group has used other forms of obfuscation, include commingling legitimate traffic with communications traffic so that network streams appear legitimate.", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Network protocol analysis, Packet capture, Process monitoring, Process use of network", "attack_pattern_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. [2]", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate some obfuscation activity at the network level."}]},
{"attack_pattern_name": "Steganography", "attack_pattern_description": "Some malware that has been used by Axiom also uses steganography to hide communication in PNG image files.[1]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Network protocol analysis, Packet capture, Process monitoring, Process use of network", "attack_pattern_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[8]", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate some obfuscation activity at the network level."}]},
{"attack_pattern_name": "OS Credential Dumping", "attack_pattern_description": "Axiom has been known to dump credentials.[1]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "API monitoring, PowerShell logs, Process command-line parameters, Process monitoring", "attack_pattern_detection": "WindowsMonitor for unexpected processes interacting with lsass.exe.[26] Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective Process Injection to reduce potential indicators of malicious activity.Hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, [27] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. [28] [29] [30] Note: Domain controllers may not log replication requests originating from the default domain controller account. [31]. Also monitor for network protocols [28] [32] and other replication requests [33] from IPs not associated with known domain controllers. [4]LinuxTo obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path /proc//maps, where the directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.", "attack_pattern_mitigations": [{"mitigations_name": "Active Directory Configuration", "mitigations_description": "Manage the access control list for \"Replicating Directory Changes\" and other permissions associated with domain controller replication. [4] [5] Consider adding users to the \"Protected Users\" Active Directory security group. This can help limit the caching of users' plaintext credentials.[6]"}, {"mitigations_name": "Credential Access Protection", "mitigations_description": "With Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements. [2] It also does not protect against all forms of credential dumping. [3]"}, {"mitigations_name": "Encrypt Sensitive Information", "mitigations_description": "Ensure Domain Controller backups are properly secured."}, {"mitigations_name": "Operating System Configuration", "mitigations_description": "Consider disabling or restricting NTLM.[8] Consider disabling WDigest authentication.[9]"}, {"mitigations_name": "Password Policies", "mitigations_description": "Ensure that local administrator accounts have complex, unique passwords across all systems on the network."}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Windows:Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[1]Linux:Scraping the passwords from memory requires root privileges. Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive regions of memory."}, {"mitigations_name": "Privileged Process Integrity", "mitigations_description": "On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[7]"}, {"mitigations_name": "User Training", "mitigations_description": "Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts."}]}
]