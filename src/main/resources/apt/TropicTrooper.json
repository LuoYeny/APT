[
{"apt_name": "Tropic Trooper", "apt_description": "Tropic Trooper is an unaffiliated threat group that has led targeted campaigns against targets in Taiwan, the Philippines, and Hong Kong. Tropic Trooper focuses on targeting government, healthcare, transportation, and high-tech industries and has been active since 2011.[1][2][3]", "software_item": [{"software_name": "BITSAdmin", "software_description": "BITS Jobs, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer"}, {"software_name": "KeyBoy", "software_description": "Boot or Logon Autostart Execution: Winlogon Helper DLL, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Python, Commonly Used Port, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Data Obfuscation: Protocol Impersonation, File and Directory Discovery, Hide Artifacts: Hidden Window, Indicator Removal on Host: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Inter-Process Communication: Dynamic Data Exchange, Obfuscated Files or Information, Screen Capture, System Information Discovery, System Network Configuration Discovery"}, {"software_name": "PoisonIvy", "software_description": "Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit"}, {"software_name": "USBferry", "software_description": "Account Discovery: Local Account, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, File and Directory Discovery, Peripheral Device Discovery, Process Discovery, Remote System Discovery, Replication Through Removable Media, Signed Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery"}, {"software_name": "YAHOYAH", "software_description": "Application Layer Protocol: Web Protocols, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Obfuscated Files or Information, Software Discovery: Security Software Discovery, System Information Discovery"}]},
{"attack_pattern_name": "Valid Accounts: Local Accounts", "attack_pattern_description": "Tropic Trooper has used known administrator account credentials to execute the backdoor directly.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Authentication logs", "attack_pattern_detection": "Perform regular audits of local system accounts to detect accounts that may have been created by an adversary for persistence. Look for suspicious account behavior, such as accounts logged in at odd times or outside of business hours.", "attack_pattern_mitigations": [{"mitigations_name": "Password Policies", "mitigations_description": "Ensure that local administrator accounts have complex, unique passwords across all systems on the network."}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Audit local accounts permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. [1] [2] These audits should check if new local accounts are created that have not be authorized. Implementing LAPS may help prevent reuse of local administrator credentials across a domain.[3]"}]},
{"attack_pattern_name": "Security Software Discovery", "attack_pattern_description": "Tropic Trooper can search for anti-virus software running on the system.[2]", "attack_pattern_platforms": "AWS, Azure, Azure AD, GCP, Linux, Office 365, SaaS, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "AWS CloudTrail logs, Azure activity logs, File monitoring, Process command-line parameters, Process monitoring, Stackdriver logs", "attack_pattern_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.In cloud environments, additionally monitor logs for the usage of APIs that may be used to gather information about security software configurations within the environment.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Server Software Component: Web Shell", "attack_pattern_description": "Tropic Trooper has started a web service in the target host and wait for the adversary to connect, acting as a web shell.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Authentication logs, File monitoring, Netflow/Enclave netflow, Process monitoring", "attack_pattern_detection": "Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload: [1] <?php @eval($_POST['password']);>Nevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as running cmd.exe or accessing files that are not in the Web directory. File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. [15]", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Replication Through Removable Media", "attack_pattern_description": "Tropic Trooper has attempted to transfer USBferry from an infected USB device by copying an Autorun function to the target machine.[3]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Data loss prevention, File monitoring", "attack_pattern_detection": "Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.", "attack_pattern_mitigations": [{"mitigations_name": "Disable or Remove Feature or Program", "mitigations_description": "Disable Autorun if it is unnecessary. [1] Disallow or restrict removable media at an organizational policy level if it is not required for business operations. [2]"}, {"mitigations_name": "Limit Hardware Installation", "mitigations_description": "Limit the use of USB devices and removable media within a network."}]},
{"attack_pattern_name": "User Execution: Malicious File", "attack_pattern_description": "Tropic Trooper has lured victims into executing malware via malicious e-mail attachments.[6]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Anti-virus, Process command-line parameters, Process monitoring", "attack_pattern_detection": "Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads.Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).", "attack_pattern_mitigations": [{"mitigations_name": "Execution Prevention", "mitigations_description": "Application control may be able to prevent the running of executables masquerading as other files."}, {"mitigations_name": "User Training", "mitigations_description": "Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events."}]},
{"attack_pattern_name": "System Information Discovery", "attack_pattern_description": "Tropic Trooper has detected a target system\u2019s OS version and system volume information.[4][3]", "attack_pattern_platforms": "AWS, Azure, GCP, Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-312", "attack_pattern_DataSources": "AWS CloudTrail logs, Azure activity logs, Process command-line parameters, Process monitoring, Stackdriver logs", "attack_pattern_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.In cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Phishing: Spearphishing Attachment", "attack_pattern_description": "Tropic Trooper sent spearphishing emails that contained malicious Microsoft Office and fake installer file attachments.[2][4][5][6][3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-163", "attack_pattern_DataSources": "Detonation chamber, Email gateway, File monitoring, Mail server, Network intrusion detection system, Packet capture", "attack_pattern_detection": "Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as Exploitation for Client Execution or usage of malicious scripts.", "attack_pattern_mitigations": [{"mitigations_name": "Antivirus/Antimalware", "mitigations_description": "Anti-virus can also automatically quarantine suspicious files."}, {"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion prevention systems and systems designed to scan and remove malicious email attachments can be used to block activity."}, {"mitigations_name": "Restrict Web-Based Content", "mitigations_description": "Block unknown or unused attachments by default that should not be transmitted over email as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some email scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious attachments."}, {"mitigations_name": "User Training", "mitigations_description": "Users can be trained to identify social engineering techniques and spearphishing emails."}]},
{"attack_pattern_name": "System Network Configuration Discovery", "attack_pattern_description": "Tropic Trooper has used scripts to collect the host's network topology.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-309", "attack_pattern_DataSources": "Process command-line parameters, Process monitoring", "attack_pattern_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "System Network Connections Discovery", "attack_pattern_description": "Tropic Trooper has tested if the localhost network is available and other connection capability on an infected system using command scripts.[3]", "attack_pattern_platforms": "AWS, Azure, GCP, Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Process command-line parameters, Process monitoring", "attack_pattern_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Application Layer Protocol: Web Protocols", "attack_pattern_description": "Tropic Trooper has used HTTP in communication with the C2.[6][3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Netflow/Enclave netflow, Network protocol analysis, Packet capture, Process monitoring, Process use of network", "attack_pattern_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.[195]Monitor for web traffic to/from known-bad or suspicious domains.", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level."}]},
{"attack_pattern_name": "Steganography", "attack_pattern_description": "Tropic Trooper has used JPG files with encrypted payloads to mask their backdoor routines and evade detection.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Binary file metadata", "attack_pattern_detection": "Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings are other signatures left in system artifacts related to decoding steganography.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Template Injection", "attack_pattern_description": "Tropic Trooper delivered malicious documents with the XLSX extension, typically used by OpenXML documents, but the file itself was actually an OLE (XLS) document.[2]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Anti-virus, Email gateway, Network intrusion detection system, Web logs", "attack_pattern_detection": "Analyze process behavior to determine if an Office application is performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex: PowerShell), or other suspicious actions that could relate to post-compromise behavior.", "attack_pattern_mitigations": [{"mitigations_name": "Antivirus/Antimalware", "mitigations_description": "Network/Host intrusion prevention systems, antivirus, and detonation chambers can be employed to prevent documents from fetching and/or executing malicious payloads.[5]"}, {"mitigations_name": "Disable or Remove Feature or Program", "mitigations_description": "Consider disabling Microsoft Office macros/active content to prevent the execution of malicious payloads in documents [8], though this setting may not mitigate the Forced Authentication use for this technique."}, {"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network/Host intrusion prevention systems, antivirus, and detonation chambers can be employed to prevent documents from fetching and/or executing malicious payloads.[5]"}, {"mitigations_name": "User Training", "mitigations_description": "Train users to identify social engineering techniques and spearphishing emails."}]},
{"attack_pattern_name": "Obfuscated Files or Information", "attack_pattern_description": "Tropic Trooper has encrypted configuration files.[1][3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-267", "attack_pattern_DataSources": "Binary file metadata, Email gateway, Environment variable, File monitoring, Malware reverse engineering, Network intrusion detection system, Network protocol analysis, Process command-line parameters, Process monitoring, Process use of network, SSL/TLS inspection, Windows event logs", "attack_pattern_detection": "Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). Flag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. [229] [5] [230] Obfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.", "attack_pattern_mitigations": [{"mitigations_name": "Antivirus/Antimalware", "mitigations_description": "Consider utilizing the Antimalware Scan Interface (AMSI) on Windows 10 to analyze commands after being processed/interpreted. [7]"}]},
{"attack_pattern_name": "System Owner/User Discovery", "attack_pattern_description": "Tropic Trooper used letmein to scan for saved usernames on the target system.[4]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-577", "attack_pattern_DataSources": "File monitoring, Process command-line parameters, Process monitoring", "attack_pattern_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Masquerading: Match Legitimate Name or Location", "attack_pattern_description": "Tropic Trooper has hidden payloads in Flash directories and fake installer files.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-177", "attack_pattern_DataSources": "Binary file metadata, File monitoring, Process command-line parameters, Process monitoring", "attack_pattern_detection": "Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.If file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. [65] Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.[66]", "attack_pattern_mitigations": [{"mitigations_name": "Code Signing", "mitigations_description": "Require signed binaries."}, {"mitigations_name": "Execution Prevention", "mitigations_description": "Use tools that restrict program execution via application control by attributes other than file name for common operating system utilities that are needed."}, {"mitigations_name": "Restrict File and Directory Permissions", "mitigations_description": "Use file system access controls to protect folders such as C:\\Windows\\System32."}]},
{"attack_pattern_name": "Native API", "attack_pattern_description": "Tropic Trooper has used multiple Windows APIs including HttpInitialize, HttpCreateHttpHandle, and HttpAddUrl.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "API monitoring, Loaded DLLs, Process monitoring, System calls", "attack_pattern_detection": "Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient. Utilization of the Windows API may involve processes loading/accessing system DLLs associated with providing called functions (ex: kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity.", "attack_pattern_mitigations": [{"mitigations_name": "Execution Prevention", "mitigations_description": "Identify and block potentially malicious software executed that may be executed through this technique by using application control [12] tools, like Windows Defender Application Control[13], AppLocker, [14] [15] or Software Restriction Policies [16] where appropriate. [17]"}]},
{"attack_pattern_name": "Software Discovery", "attack_pattern_description": "Tropic Trooper's backdoor could list the infected system's installed software.[3]", "attack_pattern_platforms": "AWS, Azure, Azure AD, GCP, Linux, Office 365, SaaS, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "AWS CloudTrail logs, Azure activity logs, File monitoring, Process command-line parameters, Process monitoring, Stackdriver logs", "attack_pattern_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Network Share Discovery", "attack_pattern_description": "Tropic Trooper used netview to scan target systems for shared resources.[4]", "attack_pattern_platforms": "AWS, Azure, GCP, Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-643", "attack_pattern_DataSources": "Network protocol analysis, Process command-line parameters, Process monitoring, Process use of network", "attack_pattern_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.Normal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.In cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be sufficient due to benign use during normal operations.", "attack_pattern_mitigations": [{"mitigations_name": "Operating System Configuration", "mitigations_description": "Enable Windows Group Policy \"Do Not Allow Anonymous Enumeration of SAM Accounts and Shares\" security setting to limit users who can enumerate network shares.[5]"}]},
{"attack_pattern_name": "Network Service Scanning", "attack_pattern_description": "Tropic Trooper used pr and an openly available tool to scan for open ports on target systems.[4][3]", "attack_pattern_platforms": "AWS, Azure, GCP, Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-300", "attack_pattern_DataSources": "Netflow/Enclave netflow, Network protocol analysis, Packet capture, Process command-line parameters, Process use of network", "attack_pattern_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.Normal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.", "attack_pattern_mitigations": [{"mitigations_name": "Disable or Remove Feature or Program", "mitigations_description": "Ensure that unnecessary ports and services are closed to prevent risk of discovery and potential exploitation."}, {"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Use network intrusion detection/prevention systems to detect and prevent remote service scans."}, {"mitigations_name": "Network Segmentation", "mitigations_description": "Ensure proper network segmentation is followed to protect critical servers and devices."}]},
{"attack_pattern_name": "Indicator Removal on Host: File Deletion", "attack_pattern_description": "Tropic Trooper has deleted dropper files on an infected system using command scripts.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Binary file metadata, File monitoring, Process command-line parameters", "attack_pattern_detection": "It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Hijack Execution Flow: DLL Side-Loading", "attack_pattern_description": "Tropic Trooper has been known to side-load DLLs using a valid version of a Windows Address Book and Windows Defender executable with one of their tools.[7][6]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": "CAPEC-capec", "attack_pattern_DataSources": "Loaded DLLs, Process monitoring, Process use of network", "attack_pattern_detection": "Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.", "attack_pattern_mitigations": [{"mitigations_name": "Audit", "mitigations_description": "Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software."}, {"mitigations_name": "Restrict File and Directory Permissions", "mitigations_description": "Install software in write-protected locations."}, {"mitigations_name": "Update Software", "mitigations_description": "Update software regularly to include patches that fix DLL side-loading vulnerabilities."}]},
{"attack_pattern_name": "Hide Artifacts: Hidden Files and Directories", "attack_pattern_description": "Tropic Trooper has created a hidden directory under C:\\ProgramData\\Apple\\Updates\\ and C:\\Users\\Public\\Documents\\Flash\\.[1][3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "File monitoring, Process command-line parameters, Process monitoring", "attack_pattern_detection": "Monitor the file system and shell commands for files being created with a leading \".\" and the Windows command-line use of attrib.exe to add the hidden attribute.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Process Discovery", "attack_pattern_description": "Tropic Trooper is capable of enumerating the running processes on the system using pslist.[2][3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-573", "attack_pattern_DataSources": "API monitoring, Process command-line parameters, Process monitoring", "attack_pattern_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.Normal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "File and Directory Discovery", "attack_pattern_description": "Tropic Trooper has monitored files' modified time.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "File monitoring, Process command-line parameters, Process monitoring", "attack_pattern_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Exfiltration Over Physical Medium: Exfiltration over USB", "attack_pattern_description": "Tropic Trooper has exfiltrated data using USB storage devices.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Data loss prevention, File monitoring, Process monitoring", "attack_pattern_detection": "Monitor file access on removable media. Detect processes that execute when removable media are mounted.", "attack_pattern_mitigations": [{"mitigations_name": "Disable or Remove Feature or Program", "mitigations_description": "Disable Autorun if it is unnecessary. [1] Disallow or restrict removable media at an organizational policy level if they are not required for business operations. [2]"}, {"mitigations_name": "Limit Hardware Installation", "mitigations_description": "Limit the use of USB devices and removable media within a network."}]},
{"attack_pattern_name": "Exploitation for Client Execution", "attack_pattern_description": "Tropic Trooper has executed commands through Microsoft security vulnerabilities, including CVE-2017-11882, CVE-2018-0802, and CVE-2012-0158.[1][2]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Anti-virus, Process monitoring, System calls", "attack_pattern_detection": "Detecting software exploitation may be difficult depending on the tools available. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the browser or Office processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.", "attack_pattern_mitigations": [{"mitigations_name": "Application Isolation and Sandboxing", "mitigations_description": "Browser sandboxes can be used to mitigate some of the impact of exploitation, but sandbox escapes may still exist. [3] [4]Other types of virtualization and application microsegmentation may also mitigate the impact of client-side exploitation. Risks of additional exploits and weaknesses in those systems may still exist. [4]"}, {"mitigations_name": "Exploit Protection", "mitigations_description": "Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior. [1] Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring. [2] Many of these protections depend on the architecture and target application binary for compatibility."}]},
{"attack_pattern_name": "Create or Modify System Process: Windows Service", "attack_pattern_description": "Tropic Trooper has installed a service pointing to a malicious DLL dropped to disk.[8]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "API monitoring, File monitoring, Process command-line parameters, Process monitoring, Windows Registry, Windows event logs", "attack_pattern_detection": "Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data. Remote access tools with built-in features may also interact directly with the Windows API to perform these functions outside of typical system utilities. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts. Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at HKLM\\SYSTEM\\CurrentControlSet\\Services. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.[97] Creation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 [98][99]). New, benign services may be created during installation of new software.Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.", "attack_pattern_mitigations": [{"mitigations_name": "Audit", "mitigations_description": "Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them."}, {"mitigations_name": "User Account Management", "mitigations_description": "Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations."}]},
{"attack_pattern_name": "Encrypted Channel", "attack_pattern_description": "Tropic Trooper has encrypted traffic with the C2 to prevent network detection.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Malware reverse engineering, Netflow/Enclave netflow, Packet capture, Process monitoring, Process use of network, SSL/TLS inspection", "attack_pattern_detection": "SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[2] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[3]In general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[4]", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level."}, {"mitigations_name": "SSL/TLS Inspection", "mitigations_description": "SSL/TLS inspection can be used to see the contents of encrypted sessions to look for network-based indicators of malware communication protocols."}]},
{"attack_pattern_name": "Ingress Tool Transfer", "attack_pattern_description": "Tropic Trooper has used a delivered trojan to download additional files.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "File monitoring, Netflow/Enclave netflow, Network protocol analysis, Packet capture, Process command-line parameters, Process monitoring, Process use of network", "attack_pattern_detection": "Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[1]", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[1]"}]},
{"attack_pattern_name": "Deobfuscate/Decode Files or Information", "attack_pattern_description": "Tropic Trooper used shellcode with an XOR algorithm to decrypt a payload. Tropic Trooper also decrypted image files which contained a payload.[2][3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "File monitoring, Process command-line parameters, Process monitoring", "attack_pattern_detection": "Detecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as certutil.Monitor the execution file paths and command-line arguments for common archive file applications and extensions, such as those for Zip and RAR archive tools, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Data Encoding: Standard Encoding", "attack_pattern_description": "Tropic Trooper has used base64 encoding to hide command strings delivered from the C2.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Network protocol analysis, Packet capture, Process monitoring, Process use of network", "attack_pattern_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[58]", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools."}]},
{"attack_pattern_name": "Automated Exfiltration", "attack_pattern_description": "Tropic Trooper has used a copy function to automatically exfiltrate sensitive data from air-gapped systems using USB storage.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "File monitoring, Process monitoring, Process use of network", "attack_pattern_detection": "Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Automated Collection", "attack_pattern_description": "Tropic Trooper has collected information automatically using the adversary's USBferry attack.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Data loss prevention, File monitoring, Process command-line parameters", "attack_pattern_detection": "Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as Data Staged. As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.", "attack_pattern_mitigations": [{"mitigations_name": "Encrypt Sensitive Information", "mitigations_description": "Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. Strong passwords should be used on certain encrypted documents that use them to prevent offline cracking through Brute Force techniques."}, {"mitigations_name": "Remote Data Storage", "mitigations_description": "Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means."}]},
{"attack_pattern_name": "Process Injection: Dynamic-link Library Injection", "attack_pattern_description": "Tropic Trooper has injected a DLL backdoor into dllhost.exe and svchost.exe.[1][3]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "API monitoring, DLL monitoring, File monitoring, Process monitoring", "attack_pattern_detection": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as VirtualAllocEx/WriteProcessMemory, may be used for this technique.[1]Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.", "attack_pattern_mitigations": [{"mitigations_name": "Behavior Prevention on Endpoint", "mitigations_description": "Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process."}]},
{"attack_pattern_name": "Command and Scripting Interpreter: Windows Command Shell", "attack_pattern_description": "Tropic Trooper has used Windows command scripts.[3]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Process command-line parameters, Process monitoring, Windows event logs", "attack_pattern_detection": "Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.", "attack_pattern_mitigations": [{"mitigations_name": "Execution Prevention", "mitigations_description": "Use application control where appropriate."}]},
{"attack_pattern_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder", "attack_pattern_description": "Tropic Trooper has created shortcuts in the Startup folder to establish persistence.[6][3]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": "CAPEC-270", "attack_pattern_DataSources": "File monitoring, Windows Registry", "attack_pattern_detection": "Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. [180] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.Changes to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.", "attack_pattern_mitigations": []},
{"attack_pattern_name": "Asymmetric Cryptography", "attack_pattern_description": "Tropic Trooper has used SSL to connect to C2 servers.[1][3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Malware reverse engineering, Netflow/Enclave netflow, Packet capture, Process monitoring, Process use of network", "attack_pattern_detection": "SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[34] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[35]In general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[36]", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level."}, {"mitigations_name": "SSL/TLS Inspection", "mitigations_description": "SSL/TLS inspection can be used to see the contents of encrypted sessions to look for network-based indicators of malware communication protocols."}]},
{"attack_pattern_name": "Application Layer Protocol: DNS", "attack_pattern_description": "Tropic Trooper's backdoor has communicated to the C2 over the DNS protocol.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "DNS records, Netflow/Enclave netflow, Netflow/Enclave netflow, Packet capture, Process monitoring, Process use of network", "attack_pattern_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.[37]Monitor for DNS traffic to/from known-bad or suspicious domains.", "attack_pattern_mitigations": [{"mitigations_name": "Filter Network Traffic", "mitigations_description": "Consider filtering DNS requests to unknown, untrusted, or known bad domains and resources. Resolving DNS requests with on-premise/proxy servers may also disrupt adversary attempts to conceal data within DNS packets."}, {"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level."}]},
{"attack_pattern_name": "Boot or Logon Autostart Execution: Winlogon Helper DLL", "attack_pattern_description": "Tropic Trooper has created the Registry key HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell and sets the value to establish persistence.[2][3]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": "CAPEC-579", "attack_pattern_DataSources": "File monitoring, Process monitoring, Windows Registry", "attack_pattern_detection": "Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values. [14] New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious.Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.", "attack_pattern_mitigations": [{"mitigations_name": "Execution Prevention", "mitigations_description": "Identify and block potentially malicious software that may be executed through the Winlogon helper process by using application control [2] tools like AppLocker [3] [4] that are capable of auditing and/or blocking unknown DLLs."}, {"mitigations_name": "User Account Management", "mitigations_description": "Limit the privileges of user accounts so that only authorized administrators can perform Winlogon helper changes."}]}
]