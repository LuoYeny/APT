[
{"apt_name": "Threat Group-1314", "apt_description": "Threat Group-1314 is an unattributed threat group that has used compromised credentials to log into a victim's remote access infrastructure. [1]", "software_item": [{"software_name": "Net", "software_description": "Account Discovery: Local Account, Account Discovery: Domain Account, Create Account: Local Account, Create Account: Domain Account, Indicator Removal on Host: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Local Groups, Permission Groups Discovery: Domain Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery"}, {"software_name": "PsExec", "software_description": "Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution"}]},
{"attack_pattern_name": "Command and Scripting Interpreter: Windows Command Shell", "attack_pattern_description": "Threat Group-1314 actors spawned shells on remote systems on a victim network to execute commands.[1]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Process command-line parameters, Process monitoring, Windows event logs", "attack_pattern_detection": "Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.", "attack_pattern_mitigations": [{"mitigations_name": "Execution Prevention", "mitigations_description": "Use application control where appropriate."}]},
{"attack_pattern_name": "Remote Services: SMB/Windows Admin Shares", "attack_pattern_description": "Threat Group-1314 actors mapped network drives using net use.[1]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": "CAPEC-561", "attack_pattern_DataSources": "Authentication logs, Process command-line parameters, Process monitoring, Process use of network", "attack_pattern_detection": "Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. [31][32] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as Net, on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.[33]", "attack_pattern_mitigations": [{"mitigations_name": "Filter Network Traffic", "mitigations_description": "Consider using the host firewall to restrict file sharing communications such as SMB. [4]"}, {"mitigations_name": "Limit Access to Resource Over Network", "mitigations_description": "Consider disabling Windows administrative shares."}, {"mitigations_name": "Password Policies", "mitigations_description": "Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed."}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems."}]},
{"attack_pattern_name": "Software Deployment Tools", "attack_pattern_description": "Threat Group-1314 actors used a victim's endpoint management platform, Altiris, for lateral movement.[1]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Authentication logs, Binary file metadata, File monitoring, Process monitoring, Process use of network, Third-party application logs, Windows Registry", "attack_pattern_detection": "Detection methods will vary depending on the type of third-party software or system and how it is typically used. The same investigation process can be applied here as with other potentially malicious activities where the distribution vector is initially unknown but the resulting activity follows a discernible pattern. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.Perform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.", "attack_pattern_mitigations": [{"mitigations_name": "Active Directory Configuration", "mitigations_description": "Ensure proper system and access isolation for critical network systems through use of group policy."}, {"mitigations_name": "Multi-factor Authentication", "mitigations_description": "Ensure proper system and access isolation for critical network systems through use of multi-factor authentication."}, {"mitigations_name": "Network Segmentation", "mitigations_description": "Ensure proper system isolation for critical network systems through use of firewalls."}, {"mitigations_name": "Password Policies", "mitigations_description": "Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network."}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Grant access to application deployment systems only to a limited number of authorized administrators."}, {"mitigations_name": "Remote Data Storage", "mitigations_description": "If the application deployment system can be configured to deploy only signed binaries, then ensure that the trusted signing certificates are not co-located with the application deployment system and are instead located on a system that cannot be accessed remotely or to which remote access is tightly controlled."}, {"mitigations_name": "Update Software", "mitigations_description": "Patch deployment systems regularly to prevent potential remote access through Exploitation for Privilege Escalation."}, {"mitigations_name": "User Account Management", "mitigations_description": "Ensure that any accounts used by third-party providers to access these systems are traceable to the third-party and are not used throughout the network or used by other third-party providers in the same environment. Ensure there are regular reviews of accounts provisioned to these systems to verify continued business need, and ensure there is governance to trace de-provisioning of access that is no longer required. Ensure proper system and access isolation for critical network systems through use of account privilege separation."}, {"mitigations_name": "User Training", "mitigations_description": "Have a strict approval policy for use of deployment systems."}]},
{"attack_pattern_name": "Valid Accounts: Domain Accounts", "attack_pattern_description": "Threat Group-1314 actors used compromised domain credentials for the victim's endpoint management platform, Altiris, to move laterally.[1]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Authentication logs, Process monitoring", "attack_pattern_detection": "Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.[10] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).Perform regular audits of domain accounts to detect accounts that may have been created by an adversary for persistence.", "attack_pattern_mitigations": [{"mitigations_name": "Multi-factor Authentication", "mitigations_description": "Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs."}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Audit domain account permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. Limit credential overlap across systems to prevent access if account credentials are obtained."}]}
]