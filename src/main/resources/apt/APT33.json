[
{"apt_name": "APT33", "apt_description": "APT33 is a suspected Iranian threat group that has carried out operations since at least 2013. The group has targeted organizations across multiple industries in the United States, Saudi Arabia, and South Korea, with a particular interest in the aviation and energy sectors. [1] [2]", "software_item": [{"software_name": "AutoIt backdoor", "software_description": "Abuse Elevation Control Mechanism: Bypass User Access Control, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, File and Directory Discovery"}, {"software_name": "Empire", "software_description": "Abuse Elevation Control Mechanism: Bypass User Access Control, Access Token Manipulation: Create Process with Token, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Account Discovery: Domain Account, Account Discovery: Local Account, Application Layer Protocol: Web Protocols, Archive Collected Data, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Shortcut Modification, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Browser Bookmark Discovery, Clipboard Data, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Command and Scripting Interpreter: PowerShell, Commonly Used Port, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exfiltration Over Web Service: Exfiltration to Code Repository, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Modification, Hijack Execution Flow: DLL Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by Unquoted Path, Indicator Removal on Host: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Man-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Native API, Network Service Scanning, Network Share Discovery, Network Sniffing, Obfuscated Files or Information, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation"}, {"software_name": "FTP", "software_description": "Commonly Used Port, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol"}, {"software_name": "LaZagne", "software_description": "Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Keychain, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: Proc Filesystem, OS Credential Dumping: /etc/passwd and /etc/shadow, Unsecured Credentials: Credentials In Files"}, {"software_name": "Mimikatz", "software_description": "Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, OS Credential Dumping: LSASS Memory, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Kerberos Tickets: Silver Ticket, Steal or Forge Kerberos Tickets: Golden Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket"}, {"software_name": "NanoCore", "software_description": "Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Symmetric Cryptography, Impair Defenses: Disable or Modify Tools, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, System Network Configuration Discovery, Video Capture"}, {"software_name": "Net", "software_description": "Account Discovery: Local Account, Account Discovery: Domain Account, Create Account: Local Account, Create Account: Domain Account, Indicator Removal on Host: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Local Groups, Permission Groups Discovery: Domain Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery"}, {"software_name": "NETWIRE", "software_description": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Input Capture: Keylogging, Screen Capture, Subvert Trust Controls: Code Signing, System Information Discovery"}, {"software_name": "PoshC2", "software_description": "Abuse Elevation Control Mechanism: Bypass User Access Control, Access Token Manipulation: Create Process with Token, Access Token Manipulation, Account Discovery: Domain Account, Account Discovery: Local Account, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Automated Collection, Brute Force, Domain Trust Discovery, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Input Capture: Keylogging, Man-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Network Service Scanning, Network Sniffing, OS Credential Dumping: LSASS Memory, Password Policy Discovery, Permission Groups Discovery: Local Groups, Process Injection, Proxy, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Unsecured Credentials: Credentials In Files, Use Alternate Authentication Material: Pass the Hash, Windows Management Instrumentation"}, {"software_name": "PowerSploit", "software_description": "Access Token Manipulation, Account Discovery: Local Account, Audio Capture, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Windows Service, Credentials from Password Stores, Data from Local System, Domain Trust Discovery, Hijack Execution Flow: DLL Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by Unquoted Path, Input Capture: Keylogging, Obfuscated Files or Information, Obfuscated Files or Information: Indicator Removal from Tools, OS Credential Dumping: LSASS Memory, Path Interception, Process Discovery, Process Injection: Portable Executable Injection, Process Injection: Dynamic-link Library Injection, Query Registry, Scheduled Task/Job: Scheduled Task, Screen Capture, Steal or Forge Kerberos Tickets: Kerberoasting, Unsecured Credentials: Credentials in Registry, Unsecured Credentials: Group Policy Preferences, Windows Management Instrumentation"}, {"software_name": "POWERTON", "software_description": "Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Commonly Used Port, Encrypted Channel: Symmetric Cryptography, Event Triggered Execution: Windows Management Instrumentation Event Subscription, OS Credential Dumping: Security Account Manager"}, {"software_name": "Pupy", "software_description": "Abuse Elevation Control Mechanism: Bypass User Access Control, Access Token Manipulation: Token Impersonation/Theft, Account Discovery: Local Account, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Systemd Service, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal on Host: Clear Windows Event Logs, Ingress Tool Transfer, Input Capture: Keylogging, Man-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Network Service Scanning, Network Share Discovery, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, OS Credential Dumping: Cached Domain Credentials, Process Discovery, Process Injection: Dynamic-link Library Injection, Remote Services: Remote Desktop Protocol, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Unsecured Credentials: Credentials In Files, Use Alternate Authentication Material: Pass the Ticket, Video Capture, Virtualization/Sandbox Evasion: System Checks"}, {"software_name": "Ruler", "software_description": "Account Discovery: Email Account, Office Application Startup: Outlook Home Page, Office Application Startup: Outlook Rules, Office Application Startup: Outlook Forms"}, {"software_name": "StoneDrill", "software_description": "Command and Scripting Interpreter: Visual Basic, Data Destruction, Disk Wipe: Disk Content Wipe, Disk Wipe: Disk Structure Wipe, Indicator Removal on Host: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information, Process Injection, Query Registry, Screen Capture, Software Discovery: Security Software Discovery, System Information Discovery, System Time Discovery, Virtualization/Sandbox Evasion, Windows Management Instrumentation"}, {"software_name": "TURNEDUP", "software_description": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Ingress Tool Transfer, Process Injection: Asynchronous Procedure Call, Screen Capture, System Information Discovery"}]},
{"attack_pattern_name": "Phishing: Spearphishing Attachment", "attack_pattern_description": "APT33 has sent spearphishing e-mails with archive attachments.[5]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-163", "attack_pattern_DataSources": "Detonation chamber, Email gateway, File monitoring, Mail server, Network intrusion detection system, Packet capture", "attack_pattern_detection": "Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as Exploitation for Client Execution or usage of malicious scripts.", "attack_pattern_mitigations": [{"mitigations_name": "Antivirus/Antimalware", "mitigations_description": "Anti-virus can also automatically quarantine suspicious files."}, {"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion prevention systems and systems designed to scan and remove malicious email attachments can be used to block activity."}, {"mitigations_name": "Restrict Web-Based Content", "mitigations_description": "Block unknown or unused attachments by default that should not be transmitted over email as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some email scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious attachments."}, {"mitigations_name": "User Training", "mitigations_description": "Users can be trained to identify social engineering techniques and spearphishing emails."}]},
{"attack_pattern_name": "User Execution: Malicious File", "attack_pattern_description": "APT33 has used malicious e-mail attachments to lure victims into executing malware.[5]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Anti-virus, Process command-line parameters, Process monitoring", "attack_pattern_detection": "Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads.Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).", "attack_pattern_mitigations": [{"mitigations_name": "Execution Prevention", "mitigations_description": "Application control may be able to prevent the running of executables masquerading as other files."}, {"mitigations_name": "User Training", "mitigations_description": "Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events."}]},
{"attack_pattern_name": "Cloud Accounts", "attack_pattern_description": "APT33 has used compromised Office 365 accounts in tandem with Ruler in an attempt to gain control of endpoints.[5]", "attack_pattern_platforms": "AWS, Azure, Azure AD, GCP, Office 365, SaaS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "AWS CloudTrail logs, Authentication logs, Azure activity logs, Stackdriver logs", "attack_pattern_detection": "Perform regular audits of cloud accounts to detect abnormal or malicious activity, such as accessing information outside of the normal function of the account or account usage at atypical hours.", "attack_pattern_mitigations": [{"mitigations_name": "Password Policies", "mitigations_description": "Ensure that privileged cloud accounts have complex, unique passwords across all systems on the network."}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Audit cloud accounts permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. [4] [5] These audits should check if new cloud accounts are created that have not be authorized."}]},
{"attack_pattern_name": "Scheduled Task/Job: Scheduled Task", "attack_pattern_description": "APT33 has created a scheduled task to execute a .vbe file multiple times a day.[3]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "File monitoring, Process command-line parameters, Process monitoring, Windows event logs", "attack_pattern_detection": "Monitor process execution from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. [93] If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.Configure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service. [94] Several events will then be logged on scheduled task activity, including: [95][96]Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registeredEvent ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updatedEvent ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deletedEvent ID 4698 on Windows 10, Server 2016 - Scheduled task createdEvent ID 4700 on Windows 10, Server 2016 - Scheduled task enabledEvent ID 4701 on Windows 10, Server 2016 - Scheduled task disabledTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. [97]Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.", "attack_pattern_mitigations": [{"mitigations_name": "Audit", "mitigations_description": "Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. [3]"}, {"mitigations_name": "Operating System Configuration", "mitigations_description": "Configure settings for scheduled tasks to force tasks to run under the context of the authenticated account instead of allowing them to run as SYSTEM. The associated Registry key is located at HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\SubmitControl. The setting can be configured through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > Security Options: Domain Controller: Allow server operators to schedule tasks, set to disabled. [2]"}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be configured through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Increase scheduling priority. [1]"}, {"mitigations_name": "User Account Management", "mitigations_description": "Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems."}]},
{"attack_pattern_name": "Application Layer Protocol: Web Protocols", "attack_pattern_description": "APT33 has used HTTP for command and control.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Netflow/Enclave netflow, Network protocol analysis, Packet capture, Process monitoring, Process use of network", "attack_pattern_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.[195]Monitor for web traffic to/from known-bad or suspicious domains.", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level."}]},
{"attack_pattern_name": "OS Credential Dumping: LSA Secrets", "attack_pattern_description": "APT33 has used a variety of publicly available tools like LaZagne to gather credentials.[3][4]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "PowerShell logs, Process command-line parameters, Process monitoring", "attack_pattern_detection": "Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[32] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.", "attack_pattern_mitigations": [{"mitigations_name": "Password Policies", "mitigations_description": "Ensure that local administrator accounts have complex, unique passwords across all systems on the network."}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[3]"}, {"mitigations_name": "User Training", "mitigations_description": "Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts."}]},
{"attack_pattern_name": "Phishing: Spearphishing Link", "attack_pattern_description": "APT33 has sent spearphishing emails containing links to .hta files.[1][3]", "attack_pattern_platforms": "Linux, Office 365, SaaS, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-163", "attack_pattern_DataSources": "DNS records, Detonation chamber, Email gateway, Mail server, Packet capture, SSL/TLS inspection, Web proxy", "attack_pattern_detection": "URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.Because this technique usually involves user interaction on the endpoint, many of the possible detections take place once User Execution occurs.", "attack_pattern_mitigations": [{"mitigations_name": "Restrict Web-Based Content", "mitigations_description": "Determine if certain websites that can be used for spearphishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk."}, {"mitigations_name": "User Training", "mitigations_description": "Users can be trained to identify social engineering techniques and spearphishing emails with malicious links."}]},
{"attack_pattern_name": "Network Sniffing", "attack_pattern_description": "APT33 has used SniffPass to collect credentials by sniffing network traffic.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-158", "attack_pattern_DataSources": "Host network interface, Netflow/Enclave netflow, Network device logs, Process monitoring", "attack_pattern_detection": "Detecting the events leading up to sniffing network traffic may be the best method of detection. From the host level, an adversary would likely need to perform a man-in-the-middle attack against other devices on a wired network in order to capture traffic that was not to or from the current compromised system. This change in the flow of information is detectable at the enclave network level. Monitor for ARP spoofing and gratuitous ARP broadcasts. Detecting compromised network devices is a bit more challenging. Auditing administrator logins, configuration changes, and device images is required to detect malicious changes.", "attack_pattern_mitigations": [{"mitigations_name": "Encrypt Sensitive Information", "mitigations_description": "Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS."}, {"mitigations_name": "Multi-factor Authentication", "mitigations_description": "Use multi-factor authentication wherever possible."}]},
{"attack_pattern_name": "Unsecured Credentials: Credentials In Files", "attack_pattern_description": "APT33 has used a variety of publicly available tools like LaZagne to gather credentials.[3][4]", "attack_pattern_platforms": "AWS, Azure, GCP, Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-639", "attack_pattern_DataSources": "File monitoring, Process command-line parameters", "attack_pattern_detection": "While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See Valid Accounts for more information.", "attack_pattern_mitigations": [{"mitigations_name": "Audit", "mitigations_description": "Preemptively search for files containing passwords and take actions to reduce the exposure risk when found."}, {"mitigations_name": "Password Policies", "mitigations_description": "Establish an organizational policy that prohibits password storage in files."}, {"mitigations_name": "Restrict File and Directory Permissions", "mitigations_description": "Restrict file shares to specific directories with access only to necessary users."}, {"mitigations_name": "User Training", "mitigations_description": "Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers."}]},
{"attack_pattern_name": "OS Credential Dumping: Cached Domain Credentials", "attack_pattern_description": "APT33 has used a variety of publicly available tools like LaZagne to gather credentials.[3][4]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "PowerShell logs, Process command-line parameters, Process monitoring", "attack_pattern_detection": "Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[19] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.Detection of compromised Valid Accounts in-use by adversaries may help as well.", "attack_pattern_mitigations": [{"mitigations_name": "Active Directory Configuration", "mitigations_description": "Consider adding users to the \"Protected Users\" Active Directory security group. This can help limit the caching of users' plaintext credentials.[5]"}, {"mitigations_name": "Operating System Configuration", "mitigations_description": "Consider limiting the number of cached credentials (HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Current Version\\Winlogon\\cachedlogonscountvalue)[4]"}, {"mitigations_name": "Password Policies", "mitigations_description": "Ensure that local administrator accounts have complex, unique passwords across all systems on the network."}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers."}, {"mitigations_name": "User Training", "mitigations_description": "Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts."}]},
{"attack_pattern_name": "User Execution: Malicious Link", "attack_pattern_description": "APT33 has lured users to click links to malicious HTML applications delivered via spearphishing emails.[1][3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Anti-virus, Process monitoring, Web proxy", "attack_pattern_detection": "Inspect network traffic for indications that a user visited a malicious site, such as links included in phishing campaigns directed at your organization.Anti-virus can potentially detect malicious documents and files that are downloaded from a link and executed on the user's computer.", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "If a link is being visited by a user, network intrusion prevention systems and systems designed to scan and remove malicious downloads can be used to block activity."}, {"mitigations_name": "Restrict Web-Based Content", "mitigations_description": "If a link is being visited by a user, block unknown or unused files in transit by default that should not be downloaded or by policy from suspicious sites as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some download scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious files."}, {"mitigations_name": "User Training", "mitigations_description": "Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events."}]},
{"attack_pattern_name": "Unsecured Credentials: Group Policy Preferences", "attack_pattern_description": "APT33 has used a variety of publicly available tools like Gpppassword to gather credentials.[3][4]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Process command-line parameters, Windows event logs", "attack_pattern_detection": "Monitor for attempts to access SYSVOL that involve searching for XML files. Deploy a new XML file with permissions set to Everyone:Deny and monitor for Access Denied errors.[4]", "attack_pattern_mitigations": [{"mitigations_name": "Active Directory Configuration", "mitigations_description": "Remove vulnerable Group Policy Preferences.[6]"}, {"mitigations_name": "Audit", "mitigations_description": "Search SYSVOL for any existing GGPs that may contain credentials and remove them.[4]"}, {"mitigations_name": "Update Software", "mitigations_description": "Apply patch KB2962486 which prevents credentials from being stored in GPPs.[4][5]"}]},
{"attack_pattern_name": "Obfuscated Files or Information", "attack_pattern_description": "APT33 has used base64 to encode payloads.[4]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-267", "attack_pattern_DataSources": "Binary file metadata, Email gateway, Environment variable, File monitoring, Malware reverse engineering, Network intrusion detection system, Network protocol analysis, Process command-line parameters, Process monitoring, Process use of network, SSL/TLS inspection, Windows event logs", "attack_pattern_detection": "Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). Flag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. [229] [5] [230] Obfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.", "attack_pattern_mitigations": [{"mitigations_name": "Antivirus/Antimalware", "mitigations_description": "Consider utilizing the Antimalware Scan Interface (AMSI) on Windows 10 to analyze commands after being processed/interpreted. [7]"}]},
{"attack_pattern_name": "Ingress Tool Transfer", "attack_pattern_description": "APT33 has downloaded additional files and programs from its C2 server.[3][5]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "File monitoring, Netflow/Enclave netflow, Network protocol analysis, Packet capture, Process command-line parameters, Process monitoring, Process use of network", "attack_pattern_detection": "Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[1]", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[1]"}]},
{"attack_pattern_name": "Non-Standard Port", "attack_pattern_description": "APT33 has used HTTP over TCP ports 808 and 880 for command and control.[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Netflow/Enclave netflow, Packet capture, Process monitoring, Process use of network", "attack_pattern_detection": "Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.[29]", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level."}, {"mitigations_name": "Network Segmentation", "mitigations_description": "Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment."}]},
{"attack_pattern_name": "Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol", "attack_pattern_description": "APT33 has used FTP to exfiltrate files (separately from the C2 channel).[3]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Netflow/Enclave netflow, Network protocol analysis, Packet capture, Process use of network", "attack_pattern_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. [22]", "attack_pattern_mitigations": [{"mitigations_name": "Filter Network Traffic", "mitigations_description": "Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network."}, {"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level."}, {"mitigations_name": "Network Segmentation", "mitigations_description": "Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network.[1]"}]},
{"attack_pattern_name": "Exploitation for Client Execution", "attack_pattern_description": "APT33 has attempted to exploit a known vulnerability in WinRAR (CVE-2018-20250), and attempted to gain remote code execution via a security bypass vulnerability (CVE-2017-11774).[3][5]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Anti-virus, Process monitoring, System calls", "attack_pattern_detection": "Detecting software exploitation may be difficult depending on the tools available. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the browser or Office processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.", "attack_pattern_mitigations": [{"mitigations_name": "Application Isolation and Sandboxing", "mitigations_description": "Browser sandboxes can be used to mitigate some of the impact of exploitation, but sandbox escapes may still exist. [3] [4]Other types of virtualization and application microsegmentation may also mitigate the impact of client-side exploitation. Risks of additional exploits and weaknesses in those systems may still exist. [4]"}, {"mitigations_name": "Exploit Protection", "mitigations_description": "Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior. [1] Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring. [2] Many of these protections depend on the architecture and target application binary for compatibility."}]},
{"attack_pattern_name": "Valid Accounts", "attack_pattern_description": "APT33 has used valid accounts for initial access and privilege escalation.[2][4]", "attack_pattern_platforms": "AWS, Azure, Azure AD, GCP, Linux, Office 365, SaaS, Windows, macOS", "attack_pattern_CAPEC_ID": "CAPEC-560", "attack_pattern_DataSources": "AWS CloudTrail logs, Authentication logs, Process monitoring, Stackdriver logs", "attack_pattern_detection": "Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services. [40] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).Perform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence. Checks on these accounts could also include whether default accounts such as Guest have been activated. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.", "attack_pattern_mitigations": [{"mitigations_name": "Application Developer Guidance", "mitigations_description": "Ensure that applications do not store sensitive data or credentials insecurely. (e.g. plaintext credentials in code, published credentials in repositories, or credentials in public cloud storage)."}, {"mitigations_name": "Password Policies", "mitigations_description": "Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. [4] When possible, applications that use SSH keys should be updated periodically and properly secured."}, {"mitigations_name": "Privileged Account Management", "mitigations_description": "Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. [1] [2] These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. [3]"}]},
{"attack_pattern_name": "Encrypted Channel: Symmetric Cryptography", "attack_pattern_description": "APT33 has used AES for encryption of command and control traffic.[4]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Malware reverse engineering, Netflow/Enclave netflow, Packet capture, Process monitoring, Process use of network, SSL/TLS inspection", "attack_pattern_detection": "With symmetric encryption, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.In general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[91]", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level."}]},
{"attack_pattern_name": "Event Triggered Execution: Windows Management Instrumentation Event Subscription", "attack_pattern_description": "APT33 has attempted to use WMI event subscriptions to establish persistence on compromised hosts.[5]", "attack_pattern_platforms": "Windows", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Process command-line parameters, Process monitoring, WMI Objects", "attack_pattern_detection": "Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence. [15] [16]Monitor processes and command-line arguments that can be used to register WMI persistence, such as the Register-WmiEvent PowerShell cmdlet [17], as well as those that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).", "attack_pattern_mitigations": [{"mitigations_name": "Privileged Account Management", "mitigations_description": "Prevent credential overlap across systems of administrator and privileged accounts. [3]"}, {"mitigations_name": "User Account Management", "mitigations_description": "By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI."}]},
{"attack_pattern_name": "Credentials from Web Browsers", "attack_pattern_description": "APT33 has used a variety of publicly available tools like LaZagne to gather credentials.[3][4]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "API monitoring, File monitoring, PowerShell logs, Process monitoring", "attack_pattern_detection": "Identify web browser files that contain credentials such as Google Chrome\u2019s Login Data database file: AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser. Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).", "attack_pattern_mitigations": [{"mitigations_name": "Password Policies", "mitigations_description": "Organizations may consider weighing the risk of storing credentials in web browsers. If web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in web browsers."}]},
{"attack_pattern_name": "Data Encoding: Standard Encoding", "attack_pattern_description": "APT33 has used base64 to encode command and control traffic.[4]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Network protocol analysis, Packet capture, Process monitoring, Process use of network", "attack_pattern_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[58]", "attack_pattern_mitigations": [{"mitigations_name": "Network Intrusion Prevention", "mitigations_description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools."}]},
{"attack_pattern_name": "Brute Force: Password Spraying", "attack_pattern_description": "APT33 has used password spraying to gain access to target systems.[4][5]", "attack_pattern_platforms": "AWS, Azure, Azure AD, GCP, Linux, Office 365, SaaS, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Authentication logs, Office 365 account logs", "attack_pattern_detection": "Monitor authentication logs for system and application login failures of Valid Accounts. Specifically, monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.Consider the following event IDs:[11]Domain Controllers: \"Audit Logon\" (Success & Failure) for event ID 4625.Domain Controllers: \"Audit Kerberos Authentication Service\" (Success & Failure) for event ID 4771.All systems: \"Audit Logon\" (Success & Failure) for event ID 4648.", "attack_pattern_mitigations": [{"mitigations_name": "Account Use Policies", "mitigations_description": "Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out."}, {"mitigations_name": "Multi-factor Authentication", "mitigations_description": "Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services."}, {"mitigations_name": "Password Policies", "mitigations_description": "Refer to NIST guidelines when creating password policies. [3]"}]},
{"attack_pattern_name": "Exploitation for Privilege Escalation", "attack_pattern_description": "APT33 has used a publicly available exploit for CVE-2017-0213 to escalate privileges on a local system.[4]", "attack_pattern_platforms": "Linux, Windows, macOS", "attack_pattern_CAPEC_ID": null, "attack_pattern_DataSources": "Application logs, Process monitoring, Windows Error Reporting", "attack_pattern_detection": "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution or evidence of Discovery.Higher privileges are often necessary to perform additional actions such as some methods of OS Credential Dumping. Look for additional activity that may indicate an adversary has gained higher privileges.", "attack_pattern_mitigations": [{"mitigations_name": "Application Isolation and Sandboxing", "mitigations_description": "Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of exploitation. Risks of additional exploits and weaknesses in these systems may still exist. [3]"}, {"mitigations_name": "Exploit Protection", "mitigations_description": "Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior. [1] Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring. [2] Many of these protections depend on the architecture and target application binary for compatibility and may not work for software components targeted for privilege escalation."}, {"mitigations_name": "Threat Intelligence Program", "mitigations_description": "Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization."}, {"mitigations_name": "Update Software", "mitigations_description": "Update software regularly by employing patch management for internal enterprise endpoints and servers."}]},
]